---
import { BriefcaseIcon } from "@/assets";
import { getCollection, render } from "astro:content";
import type { ExperienceDto } from "@/types/";

interface Props {
  id: string;
  data: ExperienceDto;
}

const { id, data } = Astro.props;

const {
  company,
  position,
  is_current_job,
  start_date,
  end_date,
  modality,
  location,
} = data;

const experiencies = await getCollection("experiencies");
const exp = experiencies.find((exp) => exp.id === id);
const { Content } = await render(exp);

function parsedDate(date: string) {
  if (!date) return "Actualidad";
  return new Date(date).toLocaleDateString("es-CL", {
    month: "long",
    year: "numeric",
  });
}

export const prerender = true;
---

<li class="mb-10 ms-6">
  <span
    class="absolute flex items-center justify-center w-6 h-6 bg-blue-100 rounded-full -start-3 ring-8 ring-white dark:ring-gray-900 dark:bg-blue-900"
  >
    <BriefcaseIcon class="size-4 opacity-60" />
  </span>

  <h3
    class="flex items-center mb-1 text-xl font-semibold text-gray-900 dark:text-white"
  >
    {position}

    {
      is_current_job && (
        <span class="bg-blue-100 text-blue-800 text-sm font-medium me-2 px-2.5 py-0.5 rounded dark:bg-blue-900 dark:text-blue-300 ms-3">
          Actualmente trabajando aqu√≠
        </span>
      )
    }
  </h3>

  <div
    class="block mb-2 text-sm font-normal leading-none text-gray-400 dark:text-gray-500"
  >
    <p>
      {company}

      <span>
        <time>({parsedDate(start_date)} - {parsedDate(end_date)})</time>
      </span>
    </p>
  </div>

  <div
    class="prose prose-invert leading-tight mb-4 font-normal text-gray-500 dark:text-gray-400 text-wrap line-clamp-6 active:line-clamp-none cursor-pointer"
  >
    <Content />
  </div>
</li>
