---
import type { ProjectDto } from "@/types/";
import { GitHubIcon } from "@/assets/";

interface Props {
  slug: string;
  data: ProjectDto;
  render: Function;
}

const { slug, data, render } = Astro.props;
const { title, description, tags, image, isPublic, links } = data;
---

<article class="mb-4 ms-4 px-4 flex flex-col items-center">
  <h3
    class="text-2xl tracking-widest md:text-3xl font-semibold text-yellow-300 mb-2 text-wrap flex items-center gap-x-4"
  >
    {title}

    <span
      class="border rounded-full text-white/50 tracking-normal border-slate-200/50 text-xs px-2 py-1"
    >
      {isPublic ? "PÃºblico" : "Privado"}
    </span>
  </h3>
  <p
    class="prose prose-invert leading-normal text-justify text-xs md:text-base mt-2 mb-4 font-normal text-gray-500 dark:text-gray-400"
  >
    {description}
  </p>

  <ul class="flex flex-row items-start justify-center gap-2 flex-wrap my-2">
    {
      tags.map((tag) => (
        <li class="text-xs rounded-full border-2 border-white/10 flex justify-center items-center gap-x-2 py-1 px-2">
          {tag}
        </li>
      ))
    }
  </ul>

  <div class="">
    {
      links.github && (
        <a
          href={links.github}
          class="text-xs rounded-full border-2 border-white/10 flex justify-center items-center gap-x-2 py-1 px-2 bg-white/5 hover:scale-110 hover:bg-white/10 transition"
        >
          <GitHubIcon class="w-4 h-4" />
          Ir a GitHub
        </a>
      )
    }
    {
      links.deploy && (
        <a
          href={links.deploy}
          class="text-xs rounded-full border-2 border-white/10 flex justify-center items-center gap-x-2 py-1 px-2 bg-white/5 hover:scale-110 hover:bg-white/10 transition"
        >
          Ir a la Demo
        </a>
      )
    }
  </div>

  <img
    src={image}
    class="rounded shadow-2xl shadow-white/10 mx-auto my-4 w-full md:w-1/2"
    alt={`Imagen del proyecto ${title}`}
    loading="lazy"
  />
</article>
